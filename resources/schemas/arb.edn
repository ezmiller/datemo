;;  A document can be represented as a nested series
;;  of arbitary blocks. This is not unlike HTML where
;;  the tags form a tree and blocks. Paul Ford and
;;  Jack Rusher called it an "arb": arb for arbitary,
;;  and "arb" for the latin root of tree.
;;
;;  If one were to represent this in some kind of 
;;  pseudocode, what would it look like? 
;;
;; <f:arb display="Poem" id="AfterDinner">
;;  <f:title>After Dinner</f:title>
;;  <f:description>The beginnings of a poem by 
;;     Paul Ford.</f:description>
;;  <f:added time="2003-05-11-22-00"/>
;;  <f:originally time="2003-05-11-22-00"/>
;;  <f:publish time="2003-05-12-00"/>
;;  <f:expire time="2003-05-12-00"/>
;;  <f:link has="Author" ref="PaulFord"/>
;;  <f:link has="Copyright" ref="FtrainCopyright"/>
;;  <f:link has="Form" ref="Poem"/>
;;
;;  <f:content>
;;    <f:arb display="Stanza">
;;      <f:l>The <f:link ref="Machines">machines</a> 
;;           in the air,</f:l>
;;      <f:l>They make them just like me,</f:l>
;;      <f:l>And drop us out</f:l>
;;      <f:l>without a parachute.</f:l>
;;    </f:arb>
;;    <f:space lines="10"/>
;;  </f:content>
;;
;; </f:arb>

[{:db/ident         :arb/title
  :db/unique        :db.unique/identity
  :db/valueType     :db.type/string
  :db/cardinality   :db.cardinality/one
  :db/fulltext      true
  :db/index         true}
 {:db/ident         :arb/description
  :db/unique        :db.unique/identity
  :db/valueType     :db.type/string
  :db/cardinality   :db.cardinality/one}
 {:db/ident         :arb/content
  :db/unique        :db.unique/identity
  :db/valueType     :db.type/ref
  :db/isComponent   true
  :db/cardinality   :db.cardinality/many}
 {:db/ident         :arbs
  :db/unique        :db.unique/identity
  :db/valueType     :db.type/ref
  :db/cardinality   :db.cardinality/many
  :db/isComponent   true}]
